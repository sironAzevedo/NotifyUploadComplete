name: Terraform Apply

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      aws-assume-role-arn:
        type: string
        required: true
      aws-region:
        type: string
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-assume-role-arn }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ inputs.aws-region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        working-directory: infra/terraform
        run: |
          terraform init \
            -backend-config="key=${{ github.event.repository.name }}/${{ inputs.environment }}" \
            -backend-config="region=${{ inputs.aws-region }}"

      - name: Select or Create Workspace
        working-directory: infra/terraform
        run: |
          terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }}

      - name: Terraform Validate
        working-directory: infra/terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: infra/terraform
        run: |
          terraform plan \
            -var-file="./envs/${{ inputs.environment }}/terraform.tfvars" \
            -out="${{ inputs.environment }}.plan"

      - name: Terraform Apply
        working-directory: infra/terraform
        run: terraform apply "${{ inputs.environment }}.plan"
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build Lambda Package
        working-directory: app
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -t ./package
          cp main.py package/
          cd package
          zip -r ../NotifyUploadComplete.zip .

      - name: Upload Lambda to S3
        working-directory: infra/terraform
        run: |
          BUCKET=$(terraform output -raw lambda_s3_bucket)
          aws s3 cp ../../app/NotifyUploadComplete.zip s3://$BUCKET/NotifyUploadComplete.zip
