name: Terraform CI/CD Orchestrator

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'app/**'
      - 'infra/terraform/**'

permissions:
  id-token: write
  contents: read

jobs:
  # PASSO 1: Job para determinar o ambiente e outras variáveis dinâmicas
  setup:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.determine_env.outputs.environment }}
      aws_role_arn: ${{ steps.determine_env.outputs.aws_role_arn }}
      is_deploy_event: ${{ steps.determine_env.outputs.is_deploy_event }}

    steps:
      - name: Determine dynamic values
        id: determine_env
        run: |
          IS_DEPLOY='false'
          if [[ "${{ github.event_name }}" == "push" && ("${{ github.ref_name }}" == "main" || "${{ github.ref_name }}" == "develop") ]]; then
            IS_DEPLOY='true'
          fi
          echo "is_deploy_event=${IS_DEPLOY}" >> $GITHUB_OUTPUT

          if [[ "${{ github.ref_name }}" == "main" ]] || [[ "${{ github.base_ref }}" == "main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
            echo "aws_role_arn=${{ secrets.PROD_AWS_ASSUME_ROLE_ARN }}" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "aws_role_arn=${{ secrets.DEV_AWS_ASSUME_ROLE_ARN }}" >> $GITHUB_OUTPUT
          fi

  # PASSO 2: Job que chama o workflow de validação
  validate:
    needs: setup
    uses: ./.github/workflows/terraform-validate.yml
    with:
      environment: ${{ needs.setup.outputs.environment }}
      aws-assume-role-arn: ${{ needs.setup.outputs.aws_role_arn }}
      aws-region: 'us-east-1'
    secrets: inherit

  # PASSO 3: Job que chama o deploy de DEV
  deploy-dev:
    needs: [setup, validate]
    if: needs.setup.outputs.is_deploy_event == 'true' && needs.setup.outputs.environment == 'dev'
    uses: ./.github/workflows/terraform-apply.yml
    with:
      environment: 'dev'
      aws-assume-role-arn: ${{ secrets.DEV_AWS_ASSUME_ROLE_ARN }}
      aws-region: 'us-east-1'
    secrets: inherit

  # PASSO 4: Job que chama o deploy de PROD
  deploy-prod:
    needs: [setup, validate]
    if: needs.setup.outputs.is_deploy_event == 'true' && needs.setup.outputs.environment == 'prod'
    uses: ./.github/workflows/terraform-apply.yml
    with:
      environment: 'prod'
      aws-assume-role-arn: ${{ secrets.PROD_AWS_ASSUME_ROLE_ARN }}
      aws-region: 'us-east-1'
    secrets: inherit