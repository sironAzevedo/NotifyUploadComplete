name: Terraform Validate

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      aws-region:
        type: string
        required: false
        default: 'us-east-1'
    secrets:
      aws-assume-role-arn:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    outputs:
      lambda_bucket_name: ${{ steps.get_lambda_bucket.outputs.lambda_bucket_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws-assume-role-arn }}
          aws-region: ${{ inputs.aws-region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init (bootstrap)
        working-directory: infra/bootstrap
        run: |
          terraform init \
          -backend=false \
          -var="environment=${{ inputs.environment }}"
      
      - name: Grant execute permission to check_s3.sh
        working-directory: infra/bootstrap
        run: chmod +x ./script/check_s3.sh

      - name: Terraform Apply (bootstrap)
        working-directory: infra/bootstrap
        run: |
          terraform apply -auto-approve \
            -var="environment=${{ inputs.environment }}"
      
      - name: Get lambda bucket name output
        id: get_lambda_bucket
        working-directory: infra/bootstrap
        run: |
          echo "lambda_bucket_name=$(terraform output -raw lambda_bucket_name)" >> $GITHUB_OUTPUT
            
      - name: Save bucket name artifact
        run: echo "${{ steps.get_lambda_bucket.outputs.lambda_bucket_name }}" > lambda_bucket_name.txt
      
      - uses: actions/upload-artifact@v4
        with:
          name: tf-bucket
          path: lambda_bucket_name.txt

  validate:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws-assume-role-arn }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ inputs.aws-region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        working-directory: infra/terraform
        run: |
          terraform init \
            -var="environment=${{ inputs.environment }}" \
            -backend-config="bucket=notifyuploadcomplete-terraform-tfstates-${{ inputs.environment }}" \
            -backend-config="key=${{ github.event.repository.name }}/${{ inputs.environment }}" \
            -backend-config="region=${{ inputs.aws-region }}"

      - name: Select or Create Workspace
        working-directory: infra/terraform
        run: |
          terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }}

      - name: Terraform Validate
        working-directory: infra/terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: infra/terraform
        run: |
          terraform plan \
            -var-file="./${{ inputs.environment }}/terraform.tfvars" \
            -out="${{ inputs.environment }}.plan"